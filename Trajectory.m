classdef Trajectory
    methods(Static)
        %******************************************************************
        function [qd, vd, ad] = cubicPolynomial(q0, v0, q1, v1, t0, tf, t)
            M = [ 1 t0 t0^2 t0^3;
                  0 1  2*t0 3*t0^2;
                  1 tf tf^2 tf^3;
                  0 1  2*tf 3*tf^2];

            b = [q0; v0; q1; v1];
            
            a = inv(M)*b;
            
            qd = a(1) + a(2).*t +a(3).*t.^2 + a(4).*t.^3;
            vd = a(2) +2*a(3).*t +3*a(4).*t.^2;
            ad = 2*a(3) + 6*a(4).*t;
        end
        %******************************************************************
        function [qd, vd, ad] = quinticPolynomial(q0, v0, a0, q1, v1, a1, t0, tf, t)
            M = [ 1 t0 t0^2 t0^3   t0^4 t0^5;
                  0 1  2*t0 3*t0^2 4*t0^3  5*t0^4;
                  0 0  2    6*t0   12*t0^2 20*t0^3;
                  1 tf tf^2 tf^3   tf^4    tf^5;
                  0 1  2*tf 3*tf^2 4*tf^3  5*tf^4;
                  0 0  2    6*tf   12*tf^2 20*tf^3];

            b=[q0; v0; a0; q1; v1; a1];
            a = inv(M)*b;

            qd = a(1) + a(2).*t +a(3).*t.^2 + a(4).*t.^3 +a(5).*t.^4 + a(6).*t.^5;
            vd = a(2) +2*a(3).*t +3*a(4).*t.^2 +4*a(5).*t.^3 +5*a(6).*t.^4;
            ad = 2*a(3) + 6*a(4).*t +12*a(5).*t.^2 +20*a(6).*t.^3;
        end
        %******************************************************************
    end
end